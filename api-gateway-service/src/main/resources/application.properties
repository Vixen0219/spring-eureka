spring.application.name=api-gateway-service
# similar to enable client but specific to Gateway service
# specity discovered service names should be specified in lower case
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.loadbalancer.ribbon.enabled=false
# Makes a redirect to the keycloak server instead of a 404
spring.cloud.gateway.default-filters=TokenRelay
# specify service router props as list
spring.cloud.gateway.routes[0].id=product-service
# lb prefix for load balanced
spring.cloud.gateway.routes[0].uri=lb://product-service
# define property for routing requests via predicate
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product
# eureka instance property
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

#order
spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:3451/auth/realms/ms-realm
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-id=sc-gateway-client
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-secret=fe7cb18e-8570-4adb-bb93-e9ffbb701eee
spring.security.oauth2.client.registration.spring-cloud-gateway-client.provider=keycloak
spring.security.oauth2.client.registration.spring-cloud-gateway-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.spring-cloud-gateway-client.redirect-uri=http://localhost:8080/login/oauth2/code/sc-gateway-client

spring.main.allow-bean-definition-overriding=true
spring.main.web-application-type=reactive
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:3451/auth/realms/ms-realm/protocol/openid-connect/certs
